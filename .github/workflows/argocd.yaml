name: deployment-kubernetes
run-name: Deployment resources in Kubernetes CI

on:
  workflow_call:
    inputs:
      kube-config:
        required: true
        type: string
      environment:
        required: true
        type: string  

env:
  kube_production: kttps://production-kubernetes.default.svc:443
  kube_development: kttps://development-kubernetes.default.svc:443
  ACTION: apply
  ARGOCD_RELEASE_NAME: argocd
  CLOUDFLARE_DNS_TOKEN: ${{ secrets.CLOUDFLARE_DNS_TOKEN }}
  CLOUDFLARE_ACCOUNT: ${{ secrets.CLOUDFLARE_ACCOUNT }}

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    if: ${{ github.env.ACTION }} == 'apply'

    steps:
    - uses: actions/checkout@v1

    - name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.13.0
        kubeconfig: ${{ inputs.kube-config }}
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: Run chart-releaser
      uses: helm/chart-releaser-action@v1.6.0
      with:
        kubeconfig: ${{ inputs.kube-config }}
      env:
        CR_TOKEN: "${{ github.token }}"

    - name: Action status
      run: echo ${{ inputs.kube-config }}

    - name: Add dependency chart repos
      run: |
        helm repo add argoproj https://argoproj.github.io/argo-helm

    - name: Search argocd chart
      run: |
          helm search repo argoproj

    - name: Kubeconfig
      run: |
        mkdir -p ~/.kube
        echo ${{ inputs.kube-config }}|base64 -d > ~/.kube/config

    - name: Install argocd chart
      if: ${{ env.ACTION }} == 'apply'
      run: |
          COUNT=$(helm list -A --filter ${{ env.ARGOCD_RELEASE_NAME }}|grep -v  UPDATED |wc -l |sed 's/ //g')
          if [ $COUNT == 0 ];then
            echo "Release ${{ env.ARGOCD_RELEASE_NAME }} n√£o encontrada. Instalando..."
            echo "helm install ${{ env.ARGOCD_RELEASE_NAME }} argoproj/argo-cd --values ./deployment/helm/argoproj/argocd/values.yaml  --create-namespace --namespace argoproj"
            helm install ${{ env.ARGOCD_RELEASE_NAME }} argoproj/argo-cd --values ./deployment/helm/argoproj/argocd/values.yaml   --create-namespace --namespace argoproj
          fi
         
    - name: install projects
      run: kubectl apply -R -f ./deployment/gitops/project

    - name: install ingress
      run: kubectl apply -f ./deployment/gitops/ingress/controller.yaml
      
    - name: install prometheus
      run: kubectl apply -f ./deployment/gitops/monitoring/prometheus.yaml

    - name: install grafana
      run: kubectl apply -f ./deployment/gitops/monitoring/grafana.yaml

    - name: debug value
      run: |
        echo '${{ env.CLOUDFLARE_DNS_TOKEN }}'
        echo '${{ secrets.CLOUDFLARE_DNS_TOKEN }}'

    - name: replace cloudflare token
      run: |
        sed -i 's/__CF_TOKEN__/${{ env.CLOUDFLARE_DNS_TOKEN }}/g' ./deployment/gitops/vault/external-dns.yaml

    - name: install vault
      run: kubectl apply -R -f ./deployment/gitops/vault
      

    # - name: install argo rollouts
    #   run: kubectl apply -R -f ./deployment/gitops/argoproj/rollout.yaml 

    - name: Remove kubeconfig
      run: |
            rm -rf ~/.kube