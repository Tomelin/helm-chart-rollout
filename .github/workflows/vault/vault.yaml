name: hashicorp-vault
run-name: Implement Hashicorp vault

on:
  workflow_call:
    inputs:
      kube_config:
        required: true
        type: string

env:
  kube_production: kttps://production-kubernetes.default.svc:443
  kube_development: kttps://development-kubernetes.default.svc:443
  ACTION: apply
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  CLOUDFLARE_DNS_TOKEN: ${{ secrets.CLOUDFLARE_DNS_TOKEN }}
  CLOUDFLARE_ACCOUNT: ${{ secrets.CLOUDFLARE_ACCOUNT }}

jobs:
  vault:
    name: Enable Hashicorp vault
    runs-on: 'ubuntu-latest'
    outputs:
      kube_config: ${{ inputs.kube-config }}
      vault_root_token: ${{ steps.unseal.outputs.root_token }}
    permissions: 
      contents: read
    steps:
    - uses: actions/checkout@v1
    
    - name: Kubeconfig
      run: |
        mkdir -p ~/.kube
        echo ${{ inputs.kube_config }}|base64 -d > ~/.kube/config

    - name: 
      id: unseal
      run: echo "root_token=$(echo ${{vars.VAULT_TOKEN}})" >> $GITHUB_OUTPUT

    - name: vault login
      run: |
        kubectl -n vault exec hashicorp-vault-0 -- vault login token=${{ vars.VAULT_TOKEN }}

    - name: Remove kubeconfig
      run: |
          rm -rf ~/.kube

  # call_install_external_secret:
  #   name: Link hashicopr Vault and External Secret
  #   uses: ./.github/workflows/vault/es-vault.yaml 
  #   needs: vault
  #   permissions:
  #     contents: read
  #   if: ${{ needs.vault.result }} == 'success'
  #   with:
  #     kube_config: ${{ needs.vault.outputs.kube_config }}
  #     vault_root_token:  ${{ needs.vault.outputs.vault_root_token }}
        